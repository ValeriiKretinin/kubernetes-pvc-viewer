name: App CI

on:
  push:
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Go build
        run: |
          export GOTOOLCHAIN=auto
          go build ./cmd/backend
          go build ./cmd/agent

      - name: Go test
        run: |
          export GOTOOLCHAIN=auto
          go test ./...

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: UI build
        run: |
          cd ui
          npm i
          npm run build

  docker:
    needs: [build-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare image name (lowercase)
        run: echo "IMAGE_NAME_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref_type == 'tag' || github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:sha-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push tag image
        if: github.ref_type == 'tag'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:${{ github.ref_name }}
          cache-from: type=gha

      - name: Trivy scan (image)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:sha-${{ github.sha }}
          format: 'table'
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL'
